* Algorithm P: print 500 prime numbers.
* rI1 = J - 500
* rI2 = N
* rI3 = K
* rI4 = B
* rI5 is M plus multiples of 50
L        EQU      500             The number of primes to find.
PRINTER  EQU      19              Terminal printer
PRIME    EQU      -1              Memory area for primes
BUF0     EQU      2000            Memory area for BUF0
BUF1     EQU      BUF0+25         Memory area for BUF1
         ORIG     3000
START    IOC      0(PRINTER)      Skip to a new page.
         LD1      =1-L=           P1. Start table. j <- 1
         LD2      =3=                 n <- 3.
2H       INC1     1               P2. N is prime. j <- j + 1.
         ST2      PRIME+L,1           PRIME[J] <- N.
         J1Z      2F              P3. 500 found?
4H       INC2     2               P4. Advance N.
         ENT3     2               P5. K <- 2.
6H       ENTA     0               P6. PRIME[K]\N?
         ENTX     0,2                 rAX <- N.
         DIV      PRIME,3             rA <- Q, rX <- R.
         JXZ      4B                  To P4 if R = 0.
         CMPA     PRIME,3         P7. PRIME[K] large?
         INC3     1               P8. Advance K.
         JG       6B                  To P6 if Q > PRIME[K].
         JMP      2B                  Otherwise N is prime.
2H       OUT      TITLE(PRINTER)  P9. Print title.
         ENT4     BUF1+10             Set B <- 1.
         ENT5     -50                 Set M <- 0.
2H       INC5     L+1                 Advance M.
4H       LDA      PRIME,5         P10. Set up line. (Right to left).
         CHAR     0                    Convert PRIME[M] to decimal.
         STX      0,4(1:4)
         DEC4     1
         DEC5     50
         J5P      4B
         OUT      0,4(PRINTER)
         LD4      24,4
         J5N      2B
         HLT
* initial contents of tables and buffers
         ORIG     PRIME+1
         CON      2
         ORIG     BUF0-5
TITLE    ALF      "FIRST"
         ALF      " FIVE"
         ALF      " HUND"
         ALF      "RED P"
         ALF      "RIMES"
         ORIG     BUF0+24
         CON      BUF1+10
         ORIG     BUF1+24
         CON      BUF0+10
         END      START
